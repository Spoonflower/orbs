# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2.1
description: "Orb for Spoonflower monorepos managed by lerna"

executors:
  aws-executor:
    docker:
      - image: circleci/python:3.7.1
  project-executor:
    docker:
      - image: 773459762593.dkr.ecr.us-east-1.amazonaws.com/base/ubuntu-xenial-node-12:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

aliases:
  - &save
    save_cache:
      name: Save Temporary Workspace
      key: v-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}
      paths:
        - ~/code
  - &load
    restore_cache:
      keys:
        - v-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}
  - &step_npmauth
    run:
      name: Authenticate to GitHub Package Manager
      command: |
        if [ -z "${GITHUB_TOKEN}" ]; then echo "No GITHUB_TOKEN available. Did you set CircleCI context correctly?" && exit 1; fi
        echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> .npmrc

job_defaults: &defaults
  working_directory: ~/code
  executor: project-executor

jobs:
  build:
    <<: *defaults
    description: Build and Test a Spoonflower NodeJS project
    steps:
      - checkout
      - *step_npmauth
      - run: npm install
      - run: npm run auth
      - run: npm run bootstrap
      - run:
          name: Security Audit
          command: npm audit || true
      - run:
          name: Lint
          command: |
            if [ -f ./tslint.json ]; then
                npm run lint
            fi
      - run:
          name: Make build
          command: |
            if [ -f ./.circleci/ci.sh ]; then
               echo "Running ./.circleci/ci.sh"
               ./.circleci/ci.sh
            else
               echo "./.circleci/ci.sh was not found. Running npm run build"
               npm run build
            fi
      - run:
          name: Run tests
          command: npm test
      - *save

  package:
    <<: *defaults
    description: Publish an NPM package to GitHub
    steps:
      - *load
      - run:
          name: Git config email
          command: git config user.email "platform@spoonflower.com"
      - run:
          name: Git config username
          command: git config user.name "Platform"
      - run:
          name: Publish package
          # The following command requires that you use lerna in your root pkg.json
          # to create the versionBump and publishChanged cmd; see `ts-services` repo
          command: npm run versionBump && npm run publishChanged
